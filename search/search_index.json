{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog","text":""},{"location":"2023/12/29/papermerge-30/","title":"Papermerge 3.0","text":"<p>I am very excited to announce the release of Papermerge DMS 3.0.</p> <p>Comparatively to all previous releases, version 3.0 underwent serious architectural changes. I won't bore reader with all technical details, I will just briefly mention two biggest technical changes:</p> <ul> <li>frontend rewritten in TS/React</li> <li>REST API now served with FastAPI</li> </ul> <p>Also, the format of storing files on the disk differs from previous versions - alone this fact makes version 3.0 incompatible with all previous releases.</p> <p>Here is the list of exciting features that version 3.0 brings:</p> <ul> <li>support for jpeg/png/tiff formats is back</li> <li>full text search is now backed up by Solr search engine</li> <li>multiple authentication backends are supported e.g. oauth2.0/OIDC (not documented yet)</li> <li>well documented REST API</li> <li>dual panel mode</li> <li>page management - delete, reorder, rotate, merge, move pages between documents</li> <li>OCR with text overlay (thanks to OCRMyPDF)</li> </ul> <p>Go to 3.0 documentation and play with docker compose setup. Also, for production deployment on remote server there Ansible playbook available as well.</p> <p>Enjoy!</p>","tags":["papermerge3","announcement",3.0]},{"location":"2024/01/14/papermerge-301-release/","title":"Papermerge 3.0.1 Release","text":"<p>I am happy to announce the release of version 3.0.1.</p> <p>Among other things, this release fixes major issue related to DB connections. Let me provide short description of the problem. The access to specific REST API endpoints was leaving DB connection open. The problem is that open DB connection were accumulating up to the point (which depends on specific DB configuration) when DB was refusing to accept more DB connections, which resulted of course to the whole app going offline.</p> <p>The root course of the problem is Django ORM and the way it handles DB connections. To mitigate the issue, we've decided start moving away from Django ORM to SQLAlchemy. Of course full transition to new ORM will span many releases, but the main point here is that for end users this transition is fully opaque.</p>","tags":["announcement"]},{"location":"archive/2024/","title":"2024","text":""},{"location":"archive/2023/","title":"2023","text":""},{"location":"category/announcement/","title":"announcement","text":""},{"location":"category/papermerge3/","title":"papermerge3","text":""}]}